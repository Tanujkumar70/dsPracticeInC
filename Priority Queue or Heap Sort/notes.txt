note1=> after deletion every node in priority queue we get sorted element and this is also known as heap sort;

step 1 ) priority queue is compleate binary tree
step 2 ) heap order property

CBT => 
time complexity = O(log(n))
assume CBT as an array;

child of i'th node will be on =>
left -> (2*i + 1)
right -> (2*i +2)

parent of i th child => 
(i-1)/2 floor result is parent


type of heaps=> 
1) min heap -> parent data is lesser than child.
2) max heap -> parent data is greater than child.

priority removeMin => O(log(n))  swap first and last then deleting from last index, now call downHeapify;
priority get/search => O(1) serching for max or min element at last in array;
priority insert => O(log(n)) inserting at last then call upHeapify;